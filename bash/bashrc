#!/bin/bash
export PS1="[\D{%H:%M:%S}] \u@\h[\j] \w\n$ "

regentags() {
    srcdir=~/src
    outfile=${1:-$srcdir/tags}
    (cd $srcdir && ctags --recurse -o "$outfile" \
        --exclude="*.(html|css)" \
        --exclude="*/.tox/*" \
        --exclude="*/build/*" \
        --exclude="download/*" \
        --exclude="archive/*" \
        )
}

# Find strings in Python projects.
findpy() {
    find . \( -name '*.py' -o -name '*.pyx' \) -type f -exec grep "$@" {} +
}

# Find strings in Web projects.
findweb() {
    find . \( -name '*.js' -o -name '*.html' -o -name '*.htm' -o -name '*.css' \) -type f -exec grep  "$@" {} +
}

# Find strings in EasyBuild scripts.
findeb() {
    find . -name '*.eb' -type f -exec grep "$@" {} +
}

# Find strings in C or C++ projects.
findc() {
    find . \( -name '*.c' -o -name '*.cc' -o -name '*.cxx' -o -name '*.cpp' -o -name '*.cxx' -o -name '*.h' -o -name '*.hh' \) -type f -exec grep "$@" {} +
}

findjava() {
    find . \( -name '*.java' -o -name '*.scala' \) -type f -exec grep "$@" +
}

# Find strings in files of any file type; e.g. f go blah -> find in .go files.
f() {
    filetype=$1; shift
    find . -name \*.${filetype} -type f -exec grep "$@" {} +
}

# Something to pipe to find commands to ignore build directories.
nobuild() {
    grep -v 'tox/' | grep -v 'build/'
}

alias speedtest='wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test100.zip'
